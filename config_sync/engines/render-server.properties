# SymmetricDS Server Configuration for PostgreSQL Master Node on Render.com
# ===============================================================================
# NOTA: Este archivo está optimizado para usar variables de entorno de Render.com
# Las variables se configuran en el dashboard de Render.com
# Puerto expuesto: 8080 (automáticamente mapeado por Render.com)

# Configuración del Motor
engine.name=supabase-server

# Configuración del Nodo
group.id=server
external.id=server-001

# URL de sincronización (se auto-configura con la URL de Render.com)
# NOTA: Render.com proporciona automáticamente RENDER_EXTERNAL_URL
sync.url=${RENDER_EXTERNAL_URL}/sync/supabase-server

# Configuración de Base de Datos PostgreSQL usando variables de entorno
# CONFIGURAR en Render.com Dashboard > Environment:
# - PG_HOST: Host de PostgreSQL
# - PG_PORT: Puerto (default 5432)
# - PG_DB: Nombre de base de datos
# - PG_USER: Usuario
# - PG_PASS: Password
db.driver=org.postgresql.Driver
db.url=jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DB}?sslmode=require&ssl=true&connectTimeout=30&socketTimeout=60
db.user=${PG_USER}
db.password=${PG_PASS}

# Pool de Conexiones optimizado para Render.com
db.pool.initial.size=3
db.pool.max.size=20
db.pool.min.idle=2
db.pool.max.idle=8
db.pool.max.wait=30000
db.pool.test.on.borrow=true
db.pool.test.on.return=false
db.pool.test.while.idle=true
db.pool.validation.query=select 1

# Configuración SSL para PostgreSQL
db.ssl=true
db.ssl.factory=org.postgresql.ssl.NonValidatingFactory

# Auto-registro (DESHABILITADO en el servidor maestro)
auto.registration=false
registration.url=

# Jobs de sincronización activos 24/7
start.route.job=true
start.outgoing.batches.job=true
start.incoming.batches.job=true
start.statistics.job=true
start.synctriggers.job=true
start.push.job=true
start.pull.job=true
start.heartbeat.job=true
start.purge.job=true
start.offline.push.job=false
start.offline.pull.job=false

# Configuración de Jobs optimizada para Render.com
job.routing.period.time.ms=5000
job.outgoing.batches.period.time.ms=5000
job.incoming.batches.period.time.ms=5000
job.push.period.time.ms=10000
job.pull.period.time.ms=10000
job.heartbeat.period.time.ms=30000
job.purge.period.time.ms=43200000

# Configuración de Lotes
outgoing.batch.max.bytes.to.sync=1048576
incoming.batch.max.bytes.to.sync=1048576
outgoing.batch.max.count.to.sync=1000
incoming.batch.max.count.to.sync=1000

# Configuración de Red optimizada para cloud
http.timeout.ms=300000
http.concurrent.connections.per.pool=10
http.header.accept.charset=UTF-8

# Configuración de Seguridad
security.verify.hostname=false
https.allow.self.signed.certs=true

# Configuración Web para Render.com
web.enable=true
web.http.port=${PORT}
web.context.path=/sync
web.base.url=${RENDER_EXTERNAL_URL}

# Configuración de Log optimizada para Render.com
log.level=INFO
console.log.level=INFO
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p [%t] %c{1}: %m%n

# Configuración de Cache
cache.maximum.size=100000

# Configuración de Triggers
auto.config.database=true
auto.config.registration=true

# Configuración de Initial Load
initial.load.use.extract.job=true
initial.load.use.reload.channel=true
initial.load.extract.timeout.ms=7200000

# Configuración de Cluster (deshabilitado para single node)
cluster.locking.enabled=false

# JMX habilitado para monitoreo (puerto automático)
jmx.agent.enable=true
jmx.agent.port=31416

# Configuración de transformaciones
transform.columns.enabled=true

# Configuración de archivos
sync.files.enabled=true
sync.files.max.size.bytes=10485760

# Configuración específica para PostgreSQL
db.native.extractor=false
db.treats.binary.as.lob=false
db.stream.binary.data=true
db.use.capture.lobs=false

# Configuración de estadísticas
statistic.record.enable=true
statistic.capture.time.in.ms=60000

# Configuración de Dead Letter
dead.letter.sync.on.error=false

# Configuración de parámetros específicos del motor
symmetric.runtime.config.table.prefix=sym_
symmetric.runtime.stats.enable=true

# Configuración específica para Render.com
# Timeouts más largos para conexiones cloud
http.basic.auth.retry.count=3
http.connection.timeout.ms=30000
http.read.timeout.ms=60000

# Configuración de memoria para containers
# Se ajusta automáticamente con JAVA_OPTS en el Dockerfile
